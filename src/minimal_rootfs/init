#!/bin/sh

# System initialization sequence:
#
# /init (this file)
#  |
#  +--(1) /etc/01_prepare.sh
#  |
#  +--(2) /etc/02_ql.sh

echo -e "Welcome to \\e[1mQianlong \\e[32mLinux \\e[31mdiskless system\\e[0m (/init)"

# Let's mount all core file systems.
/etc/01_prepare.sh

# Print first message on screen.
#cat /etc/msg/init_01.txt


# Create new mountpoint in RAM, make it our new root location and overlay it
# with our storage area (if overlay area exists at all). This operation invokes
# the script '/etc/03_init.sh' as the new init process.
/etc/02_ql.sh

[ -f "/tmp/.qlcmd" ] && QLCMD=$(cat /tmp/.qlcmd) || QLCMD="/init"
# QLCMD=$(cat /tmp/.qlcmd)

echo "Switch all mount..."
# Move critical file systems to the new mountpoint.
mount --move /dev /mnt/dev
#echo "Switch to new system..."
mount --move /sys /mnt/sys
#echo "Switch to new system...sys"
mount --move /proc /mnt/proc
#echo "Switch to new system...proc"
#mount --move /tmp /mnt/tmp
#echo "Switch to new system...tmp"
#mount --move /run /mnt/run
#echo "Switch to new system...run"
#echo "Mount locations /dev, /sys, /tmp and /proc have been moved to /mnt."

# The new mountpoint becomes file system root. All original root folders are
# deleted automatically as part of the command execution. The '/sbin/init' 
# process is invoked and it becomes the new PID 1 parent process.
#echo "Switching from initramfs root area to overlayfs root area."
echo "Switch to new system..."
exec switch_root  /mnt $QLCMD

echo "(/init) - you can never see this unless there is a serious bug..."

# Wait until any key has been pressed.
read -n1 -s
